1.BIOS
2.MBR ( Master Boot Record)
3.GRUB2 Bootloader
4.Kernel
5.Systemd
6.Runlevel-Target

Target List in Red Hat Linux 7.

runlevel0.target -> poweroff.target
runlevel1.target -> rescue.target
runlevel2.target -> multi-user.target
runlevel3.target -> multi-user.target
runlevel4.target -> multi-user.target
runlevel5.target -> graphical.target
runlevel6.target -> reboot.target

BIOS
=====
BIOS stands for Basic Input/output System
Performs some system integrity checks
Searches, loads, and executes the boot loader program.
It looks for boot loader in floppy, CD-ROMs, or hard drive. You can press a key (typically F12 of F2, but it depends on your system) during the BIOS startup to change the boot sequence.
Once the boot loader program is detected and loaded into the memory, BIOS gives the control to it.
So, in simple terms BIOS loads and executes the MBR boot loader.

MBR
====
MBR stands for Master Boot Record.
It is located in the 1st sector of the bootable disk. Typically /dev/hda, or /dev/sda
MBR is less than 512 bytes in size. This has three components as shown:
Primary boot loader info in 1st 446 bytes
Partition table info in next 64 bytes
MBR validation check in last 2 bytes.
It contains information about GRUB2 (GRUB or LILO in old systems).
So, in simple terms MBR loads and executes the GRUB2 boot loader.
MBR Architecture

 

GRUB2
=======
The default bootloader program used on RHEL 7 is GRUB 2. GRUB stands for Grand Unified Bootloader. GRUB 2 replaces the older GRUB bootloader also called as legacy GRUB.
The GRUB 2 configuration file is located at /boot/grub2/grub.cfg (Do not edit this file directly).
GRUB 2 menu-configuration settings are taken from /etc/default/grub when generating grub.cfg.
Sample /etc/default/grub file:
GRUB file

If changes are made to any of these parameters, you need to run grub2-mkconfig to re-generate the /boot/grub2/grub.cfg
generate grub file

GRUB2 searches the compressed kernel image file also called as vmlinuz in the /boot
GRUB2 loads the vmlinuz kernel image file into memory and extracts the contents of the initramfs image file into a temporary, memory-based file system (tmpfs).
The initial RAM disk (Initrd) is an initial root file system that is mounted before the real root file system.
About Initramfs  –  /etc/dracut.conf
The job of the initial RAM file system is to preload the block device modules, such as for IDE, SCSI, or RAID, so that the root file system, on which those modules normally reside, can then be accessed and mounted.
The initramfs is bound to the kernel and the kernel mounts this initramfs as part of a two-stage boot process.
The Dracut utility creates initramfs whenever a new kernel is installed.
Use the lsinitrd command to view the contents of the image created by dracut:
initrd

So, in simple terms GRUB2 just loads and executes Kernel and initramfs images.


Kernel
=======
Linux Kernel is the central core of the OS and it is the first program loaded on the system starts up. While system starting kernel loads all the necessary Kernel Modules and Drives from initrd.img to load system first process systemd in Linux 7.
The kernel starts the systemd process with a process ID of 1 (PID 1) as shown below:
kernel process

systemd
========
Systemd process is the first process ID (PID 1) to run on Linux 7 systems, it initializes the system and launches all the services that were once started by the traditional init (/etc/init.d) process. Systemd process reads the configuration file of /etc/systemd/system/default.target, then its load the OS in targeted target.
This tells systemd to start everything in the /usr/lib/systemd/system/basic.target before starting the other multi-user services.
systemd brings the system to the state defined by the system target, performing system initialization tasks such as:
Setting the host name
Initializing the network
Initializing SELinux based on its configuration
Printing a welcome banner
Initializing the system hardware based on kernel boot arguments
Mounting the file systems, including virtual file systems such as the /proc file system
Cleaning up directories in /var
Starting swapping
systemd uses ‘targets’ instead of runlevels. By default, there are two main targets:
multi-user.target: analogous to runlevel 3
target: analogous to runlevel 5
Note: Refer Man pages for more details: info grub2

Boot, Reboot and Shutdown
To power off or reboot a running system from the command line, we can use the systemctl command.

systemctl poweroff will stop all running services, unmount all file systems (or remount them read-only when they cannot be unmounted), and then power down the system.
systemctl reboot will stop all running services, unmount all file systems, and then reboot the system.
Note:  systemctl halt and halt are also available to stop the system, but unlike their poweroff equivalents, these commands do not power off the system; they bring a system down to a point where it is safe to manually power it off.

Managing GRUB
The /etc/default/grub File
The /etc/default/grub configuration file defines directives that govern how GRUB behaves at boot time. Values defined in this file are used to regenerate the /boot/grub2/grub.cfg file, which controls the behavior of GRUB at boot time. Any changes made to the grub file will only take effect after the grub2-mkconfig utility has been executed.

GRUB file
